<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">
	

<ui:composition template="../WEB-INF/plantilla/layoutmnt.xhtml">

	<ui:define name="contenido">
	
		<script type="text/javascript">
			function soloRealesMiles(e, elemento){
				var keynum;
				var keychar;
				var numcheck;
				var caracteresValidos = "1234567890.,";
				
				if(window.event) // IE
				{
					keynum = e.keyCode;
				}
				else if(e.which) // Netscape/Firefox/Opera
				{
					keynum = e.which;
				}
				if((keynum == 8) || (keynum == undefined)){
					return true;
				}
				keychar = String.fromCharCode(keynum);
				return (caracteresValidos.indexOf("" + keychar) &gt; -1);
			}
			
			function limpiarComas(num){
				do {    
					num = num.replace(',','');
				} while(num.indexOf(',') &gt;= 0);
				return num;
			}
			
			function validarSoloNumeros(e, elemento)
			{
				var keynum;
				var keychar;
				var numcheck;
				var cadenaValida = "1234567890";
				//var txtNroExp = document.getElementById("frmRegExp:accRegExp:txtNroExpeOficial");
				//alert(cadenaValida.test(txtNroExp.value));
				if(window.event) // IE
				{
					keynum = e.keyCode;
				}
				else if(e.which) // Netscape/Firefox/Opera
				{
					keynum = e.which;
				}
				if((keynum == 8) || (keynum == undefined)){
					return true;
				}
				keychar = String.fromCharCode(keynum);
			 	return (cadenaValida.indexOf("" + keychar) &gt; -1);
			}
			
			function addCommas(num ,valorHidden){	
				limpo = limpiarComas(num.value);		
				var num_ = new Number(limpo);
				var pot = Math.pow(10,2);
				var aux = parseInt(num_ * pot) / pot;
				nStr = aux.toFixed(2);		
				var imp = aux.toFixed(2);
				document.getElementById("frmActExp:mytabView:0:accCua:"+valorHidden).value = nStr;
				var txtMontoPre = document.getElementById("frmActExp:mytabView:0:accCua:importe");
				var opcionMontoPre = txtMontoPre.getAttribute('value');
				document.getElementById("frmActExp:mytabView:0:accCua:txtCuantPretend").value = opcionMontoPre;
				
				nStr += '';
				x = nStr.split('.');
				x1 = x[0];
				x2 = x.length &gt; 1 ? '.' + x[1] : '';
				var rgx = /(\d+)(\d{3})/;
				while (rgx.test(x1)) {
					x1 = x1.replace(rgx, '$1' + ',' + '$2');
				}		
				num.value= x1 + x2;	
				return x1 + x2;		
			}

			function addCommasProv(num ,valorHidden)
			{	
				limpo = limpiarComas(num.value);		
				var num_ = new Number(limpo);
				var pot = Math.pow(10,2);
				var aux = parseInt(num_ * pot) / pot;
				nStr = aux.toFixed(2);		
				var imp = aux.toFixed(2);
				document.getElementById("frmActExp:mytabView:0:accProvision:"+valorHidden).value = nStr;
				var txtMontoPre = document.getElementById("frmActExp:mytabView:0:accProvision:importe2");
				var opcionMontoPre = txtMontoPre.getAttribute('value');
				document.getElementById("frmActExp:mytabView:0:accProvision:txtMontoProv").value = opcionMontoPre;
				
				nStr += '';
				x = nStr.split('.');
				x1 = x[0];
				x2 = x.length &gt; 1 ? '.' + x[1] : '';
				var rgx = /(\d+)(\d{3})/;
				while (rgx.test(x1)) {
					x1 = x1.replace(rgx, '$1' + ',' + '$2');
				}		
				num.value= x1 + x2;	
				return x1 + x2;		
			}

		</script>
		<h:form id="frmMantenAbog">
			<h2>Mantenimiento Abogado</h2>
				<p:growl id="gridMsj" globalOnly="true" showDetail="true"></p:growl>

				<h:panelGrid columns="3" id="gridAbog">

					<h:outputText value="Estudio :" />
					<p:autoComplete value="#{mnt.estudio}" var="e"
						forceSelection="true" converter="estudioConverter"
						itemLabel="#{e.nombre}" itemValue="#{e}" size="40" id="acEstudio"
						label="Estudio" completeMethod="#{mnt.completeEstudioMantenimiento}" />
					<p:message for="acEstudio" />

					<h:outputText value="Registro CA :" />
					<p:inputText value="#{mnt.txtRegistroCA}" id="txtRegistroCA"
						label="Registro CA" size="20" maxlength="50"/>
					<p:message for="txtRegistroCA" />

					<h:outputText value="DNI :" />
					<p:inputText id="txtDNI" value="#{mnt.DNI}" label="DNI"
						maxlength="8" onkeypress="return validarSoloNumeros(event,this);"
							onblur="return validarSoloNumeros();">
					</p:inputText>
					<p:message for="txtDNI" />

					<h:outputText value="Nombre :" />
					<p:inputText id="txtNombre" value="#{mnt.txtNombre}"
						size="40" maxlength="50"/>
					<p:message for="txtNombre" />

					<h:outputText value="Apellido Paterno :" />
					<p:inputText id="txtApePaterno" value="#{mnt.txtApePat}"
						size="40" maxlength="50"/>
					<p:message for="txtApePaterno" />

					<h:outputText value="Apellido Materno :" />
					<p:inputText id="txtApeMaterno" value="#{mnt.txtApeMat}"
						size="40" maxlength="50"/>
					<p:message for="txtApeMaterno" />

					<h:outputText value="Telefono :" />
					<p:inputMask id="txtTelefono" maxlength="50" value="#{mnt.txtTel}"
						 />
					<p:message for="txtTelefono" />

					<h:outputText value="Correo :" />
					<p:inputText id="txtCorreo" value="#{mnt.txtCorreo}"
						size="40" maxlength="50" />
					<p:message for="txtCorreo" />

				</h:panelGrid>

				<h:panelGrid columns="5">

					<p:commandButton id="btnBuscar" value="Buscar"
						icon="ui-icon-search" actionListener="#{mnt.buscarAbogadoMantenimiento}"
						 ajax="true" />

					<p:spacer width="10" height="20" />

					<p:commandButton id="btnAgregar" value="Agregar"
						icon="ui-icon-plus" onclick="confirmationRegistro.show()"
						update=":frmMantenAbog:dtAbogado :frmMantenAbog:gridAbog :frmMantenAbog:gridMsj" ajax="true" />

					<p:spacer width="10" height="20" />

					<p:commandButton id="btnLimpiar" value="Limpiar"
						icon="ui-icon-trash" actionListener="#{mnt.limpiarAbogadoMantenimiento}"
						update="gridAbog"
						ajax="true" />


				</h:panelGrid>

				<p:outputPanel id="dtAbogado">

					<p:dataTable value="#{mnt.abogadoDataModel}" var="tblAbogado" rows="5"
						emptyMessage="No hay abogados" paginatorPosition="bottom"
						paginator="true"
						paginatorTemplate="{FirstPageLink} {PreviousPageLink} {NextPageLink} {LastPageLink}"
						rowsPerPageTemplate="5,10,15" editable="true">

						<p:ajax event="rowEdit" listener="#{mnt.editarAbogado}" />
						
						<p:column headerText="Nombres">
							<p:cellEditor>
								<f:facet name="output">
									<h:outputText value="#{tblAbogado.nombres}" />
								</f:facet>
								<f:facet name="input">
									<p:inputText value="#{tblAbogado.nombres}"></p:inputText>
								</f:facet>
							</p:cellEditor>
						</p:column>
						
						<p:column headerText="Ap.Paterno">
							<p:cellEditor>
								<f:facet name="output">
									<h:outputText value="#{tblAbogado.apellidoPaterno}" />
								</f:facet>
								<f:facet name="input">
									<p:inputText value="#{tblAbogado.apellidoPaterno}"></p:inputText>
								</f:facet>
							</p:cellEditor>
						</p:column>
						
						<p:column headerText="Ap.Materno">
							<p:cellEditor>
								<f:facet name="output">
									<h:outputText value="#{tblAbogado.apellidoMaterno}" />
								</f:facet>
								<f:facet name="input">
									<p:inputText value="#{tblAbogado.apellidoMaterno}"></p:inputText>
								</f:facet>
							</p:cellEditor>
						</p:column>
						
						
						<p:column headerText="DNI">#{tblAbogado.dni}</p:column>
						
						
						
						<p:column headerText="Teléfono">#{tblAbogado.telefono}</p:column>
						<p:column headerText="RCA">#{tblAbogado.registroca}</p:column>	
						<p:column headerText="Email">
							<p:cellEditor>
								<f:facet name="output">
									<h:outputText value="#{tblAbogado.correo}" />
								</f:facet>
								<f:facet name="input">
									<p:inputText value="#{tblAbogado.correo}"></p:inputText>
								</f:facet>
							</p:cellEditor>
						</p:column>
							
						<p:column headerText="Estado">
							<p:cellEditor>
								<f:facet name="output">
									<h:outputText value="#{tblAbogado.estado}"></h:outputText>
								</f:facet>
								<f:facet name="input">
									<p:selectOneMenu effect="fade"
										value="#{tblAbogado.estado}"
										style="width:120px;">
										<f:selectItems value="#{mnt.estados}"
											var="e" itemLabel="#{e}" itemValue="#{e}" />
									</p:selectOneMenu>
								</f:facet>
							</p:cellEditor>
						</p:column>
						<p:column headerText="Editar" style="width:50px">
							<p:rowEditor  />
						</p:column>	
					</p:dataTable>

				</p:outputPanel>
				<p:confirmDialog
					message="¿ Est&#225; seguro de registrar el Abogado?" width="300"
					showEffect="explode" hideEffect="explode"
					header="Mensaje de Confirmaci&#243;n" severity="alert"
					widgetVar="confirmationRegistro" modal="true">
	
					<p:commandButton value="Si" ajax="false" icon="ui-icon-check"
						actionListener="#{mnt.agregarAbogadoMantenimiento}" update=":frmMantenAbog:growl1 :frmMantenAbog:panelRes :frmMantenAbog:gridAbog"
						oncomplete="confirmationRegistro.hide()" />
	
					<p:commandButton value="No" icon="ui-icon-close"
						onclick="confirmationRegistro.hide()" type="button" />
	
				</p:confirmDialog>
				
			</h:form>
			
	</ui:define>

</ui:composition>

</html>